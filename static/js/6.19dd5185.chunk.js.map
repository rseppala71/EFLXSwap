{"version":3,"sources":["views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","views/Profile/ProfileCreation/UserName.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","state/achievements/hooks.ts","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx","hooks/useApproveConfirmTransaction.ts","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/components/ProfileAvatar.tsx","state/collectibles/hooks.ts","state/teams/hooks.ts","views/Profile/components/HeaderWrapper.tsx","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/lodash/_shuffleSelf.js","../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js"],"names":["REGISTER_COST","STARTER_BUNNY_IDENTIFIERS","initialState","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","BigNumber","MINT_COST","multipliedBy","DEFAULT_TOKEN_DECIMAL","allowance","totalCost","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","children","useReducer","dispatch","account","useWeb3React","useEffect","isSubscribed","a","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","Provider","value","Wrapper","styled","div","theme","colors","textSubtle","steps","Header","t","useTranslation","useContext","as","scale","color","mb","map","translationKey","index","WalletNotConnected","ConnectWalletButton","useHasCakeBalance","minimumBalance","useTokenBalance","getCakeAddress","balance","gte","Label","label","isDisabled","Body","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","props","isSuccess","checked","e","target","style","flex","NextStepButton","endIcon","useProfileCreation","nfts","nftList","filter","nft","includes","identifier","minimumCakeBalanceToMint","Mint","useState","variationId","setVariationId","console","log","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","useApproveConfirmTransaction","onRequiresApproval","address","response","currentAllowance","toString","onApprove","approve","toJSON","onConfirm","mintNFT","onSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","fontSize","bold","num","images","md","Number","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","Link","RouterLink","primary","NftWrapper","ProfilePicture","library","setIsApproved","setIsApproving","useGetCollectibles","isLoading","nftsInWallet","tokenIds","toastError","useToast","contract","getErc721Contract","getSigner","getPancakeProfileAddress","tx","wait","status","length","to","marginLeft","height","walletNft","firstTokenId","getAddressByType","parseInt","spin","undefined","id","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","Object","values","team","isJoinable","mr","users","toLocaleString","compareAsc","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","diff","getTime","isLastDayOfMonth","dirtyDate","date","endOfDay","endOfMonth","differenceInMonths","result","sign","difference","Math","abs","differenceInCalendarMonths","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","cloneObject","dirtyObject","assign","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyBaseDate","options","locale","defaultLocale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","differenceInSeconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","floor","ExistingUserState","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useAppDispatch","toastSuccess","createProfile","fetchProfile","title","justifyContent","Views","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","useWeb3Provider","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","message","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","res","ok","json","data","error","signMessage","signature","method","headers","body","JSON","stringify","username","dateCreated","parseISO","created_at","Date","NEW","fetchUser","width","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","handleClick","getCakeBack","maxWidth","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","BIG_ZERO","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","calls","multicallv2","profileABI","fetchCosts","DangerOutline","Button","attrs","variant","failure","AvatarWrapper","mediaQueries","sm","StartPage","needsApproval","setNeedsApproval","profile","isActive","cost","lt","checkApprovalStatus","flexDirection","ProfileAvatar","minimum","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","handleDeactivateProfile","pauseProfile","getBalanceNumber","ChangeProfilePicPage","updateProfile","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","HeaderWrapper","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","img","AchievementAvatar","badge","alt","AchievementTitle","key","Description","Text","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useSelector","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","cardBorder","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","handleCollectPoints","getPoints","px","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","ComingSoon","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","nftInWallet","p","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","usePersistState","localStorageKey","usernameVisibilityToggled","setUsernameVisibility","Icon","VisibilityOff","VisibilityOn","replace","href","getBscScanLink","external","outline","StatBox","icon","PrizeIcon","subtitle","Profile","fetchAchievements","useFetchAchievements","PageLoader","exact","path","approvalState","confirmState","noop","onApproveSuccess","handlePreApprove","useRef","current","then","ButtonArrangement","StyledApproveConfirmButtonRow","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText","TeamAvatar","card","background","bg","AvatarInactive","NoProfileAvatarIcon","collectibles","identifiers","keys","fetchWalletNfts","Nfts","useTeam","fetchTeam","fetchTeams","differenceInMilliseconds","SecondaryCard","tertiary","defaultProps","textTransform","ceil","baseRandom","require","module","exports","array","size","lastIndex","rand","arrayShuffle","baseShuffle","isArray","collection","copyArray","shuffleSelf"],"mappings":"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","file":"static/js/6.19dd5185.chunk.js","sourcesContent":["export const MINT_COST = 1\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDENTIFIERS = ['mybunnie1']\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  selectedNft: {\n    nftAddress: null,\n    tokenId: null,\n  },\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(DEFAULT_TOKEN_DECIMAL),\n  allowance: new BigNumber(allowance).multipliedBy(DEFAULT_TOKEN_DECIMAL),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_selected_nft':\n      return {\n        ...state,\n        selectedNft: {\n          tokenId: action.tokenId,\n          nftAddress: action.nftAddress,\n        },\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.canMint(account)\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\n\nconst Header: React.FC = () => {\n  const { t } = useTranslation()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {t('Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\n        {t('Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {t('Total cost: 1.5 EFLX')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map((translationKey, index) => {\n          return (\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {t(translationKey)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\n\nconst WalletNotConnected = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      <Heading scale=\"xl\" mb=\"8px\">\n        {t('Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {t('Please connect your wallet to continue')}\n      </Text>\n      <ConnectWalletButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's EFLX balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <Card isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </Card>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport { Nft } from 'config/constants/types'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst Mint: React.FC = () => {\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n  console.log(\"mmmmmmmmm \",variationId)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const { t } = useTranslation()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        // TODO: Move this to a helper, this check will be probably be used many times\n        try {\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.approve(bunnyFactoryContract.address, allowance.toJSON())\n      },\n      onConfirm: () => {\n        return bunnyFactoryContract.mintNFT(variationId)\n      },\n      onSuccess: () => actions.nextStep(),\n    })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 1 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {t('You can change your profile pic later if you get another approved EVERTELL FLIX Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {t('Cost: %num% EFLX', { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setVariationId(Number(value))\n\n            return (\n              <SelectionCard\n                key={nft.identifier}\n                name=\"mintStarter\"\n                value={nft.variationId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={variationId === nft.variationId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {t('A minimum of %num% EFLX is required', { num: MINT_COST })}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { getAddressByType } from 'utils/collectibles'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport useToast from 'hooks/useToast'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const { library } = useWeb3React()\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n\n  const { t } = useTranslation()\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\n  const { toastError } = useToast()\n\n  const handleApprove = async () => {\n    const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\n    const tx = await contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      setIsApproving(false)\n      setIsApproved(true)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (!isLoading && nftsInWallet.length === 0) {\n    return (\n      <>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {t('We couldn’t find any EVERTELL FLIX Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {t(\n            'You need a EVERTELL FLIX Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 2 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Only approved EVERTELL FLIX Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {t('See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              nftsInWallet.map((walletNft) => {\n                const [firstTokenId] = tokenIds[walletNft.identifier]\n                const address = getAddressByType(walletNft.type)\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.identifier}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === selectedNft.tokenId}\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t(\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n            id=\"approveStarterCollectible\"\n          >\n            {t('Enable')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/teams/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const { t } = useTranslation()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 3 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { signMessage } from 'utils/web3React'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = await signMessage(library, account, userName)\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(t('Error'), data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'))\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 4 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={t('Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {t(\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {t('Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button\n        onClick={onPresentConfirmProfileCreation}\n        disabled={!isValid || !isUserCreated}\n        id=\"completeProfileCreation\"\n      >\n        {t('Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {t('A minimum of %num% EFLX is required', { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\nimport { State } from '../ProfileCreation/contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, profileContract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.approve(profileContract.address, allowance.toJSON())\n      },\n      onConfirm: () => {\n        console.log(\"bbbbbbbb \",selectedNft)\n        return profileContract.createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\n      },\n      onSuccess: async () => {\n        await dispatch(fetchProfile(account))\n        onDismiss()\n        toastSuccess(t('Profile created!'))\n      },\n    })\n\n  return (\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{t('Cost')}</Text>\n        <Text>{t('%num% EFLX', { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { t } = useTranslation()\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>{t('Loading...')}</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/Layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.canClaim(account)\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { t } = useTranslation()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = async () => {\n    const tx = await claimRefundContract.getCakeBack()\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Success!'))\n      onSuccess()\n      onDismiss()\n    } else {\n      setIsConfirming(false)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }\n\n  return (\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{t('Thank you for being a day-one user of EVERTELL FLIX Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t(\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 EFLX it cost to make your bunny.')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {t(\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {t('Claim Your EFLX')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { multicallv2 } from 'utils/multicall'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useToast from 'hooks/useToast'\n\nconst useGetProfileCosts = () => {\n  const { t } = useTranslation()\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: BIG_ZERO,\n    numberCakeToRegister: BIG_ZERO,\n    numberCakeToUpdate: BIG_ZERO,\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\n          address: getPancakeProfileAddress(),\n          name: method,\n        }))\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2(\n          profileABI,\n          calls,\n        )\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate.toString()),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister.toString()),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate.toString()),\n        })\n      } catch (error) {\n        toastError(t('Error'), t('Could not retrieve EFLX costs for profile'))\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError, t])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/profile/hooks'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required EFLX allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.allowance(account, getPancakeProfileAddress())\n      const currentAllowance = new BigNumber(response.toString())\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            t('%minimum% EFLX required to change profile pic', { minimum: getFullDisplayBalance(minimumCakeRequired) })}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {t('Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {t('Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {t('Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile } from 'state/profile/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const { t } = useTranslation()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = async () => {\n    const tx = await pancakeProfileContract.pauseProfile()\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess(t('Profile Paused!'))\n      onDismiss()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsConfirming(false)\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t(\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Cost to reactivate in the future: %cost% EFLX', { cost: getBalanceNumber(numberCakeToReactivate) })}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{t('I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {t('Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport { getAddressByType } from 'utils/collectibles'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null,\n  })\n  const { t } = useTranslation()\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const profileContract = useProfileContract()\n  const { account, library } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\n        return contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return profileContract.reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n        }\n\n        return profileContract.updateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n      },\n      onSuccess: async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'))\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        nftsInWallet.map((walletNft) => {\n          const [firstTokenId] = tokenIds[walletNft.identifier]\n          const handleChange = (value: string) => {\n            setSelectedNft({\n              tokenId: Number(value),\n              nftAddress: getAddressByType(walletNft.type),\n            })\n          }\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.identifier}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === selectedNft.tokenId}\n              onChange={handleChange}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && nftsInWallet.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a EVERTELL FLIX Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { useProfile } from 'state/profile/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const { t } = useTranslation()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      goToChange()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\n        <Text>{getFullDisplayBalance(cost)} EFLX</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {t('Enable')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: 'Edit Profile',\n  [Views.CHANGE]: 'Change Profile Pic',\n  [Views.REMOVE]: 'Remove Profile Pic',\n  [Views.APPROVE]: 'Enable EFLX',\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const { t } = useTranslation()\n  const translationKey = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, PresentWonIcon } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const { t } = useTranslation()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  \n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n  \n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {t('Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\n            {t('Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<PresentWonIcon />}>\n            {t('You’ve got a gift to claim!')}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@pancakeswap/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const { t } = useTranslation()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {t(key, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const { t } = useTranslation()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {t(key, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAchievements } from 'state/achievements/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const { t } = useTranslation()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n            {t('No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, AchievementState } from '../types'\nimport { fetchAchievements } from '.'\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const { t } = useTranslation()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{t('%num% points', { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap/uikit'\nimport { Achievement } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const { t } = useTranslation()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = async () => {\n    const tx = await pointCenterContract.getPoints(achievement.address)\n    setIsCollecting(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      setIsCollecting(false)\n      onCollectSuccess(achievement)\n      toastSuccess(t('Points Collected!'))\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsCollecting(false)\n    }\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {t('Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading scale=\"lg\">{t('%num% Points to Collect', { num: totalPointsToCollect })}</Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {t('Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {t('Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading scale=\"lg\" mb=\"8px\">\n                {t('Achievements')}\n              </Heading>\n              <Text as=\"p\">{t('Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading scale=\"lg\" mb=\"8px\">\n                {t('Task Center')}\n              </Heading>\n              <Text as=\"p\">{t('Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">{t('Collecting points for these tasks makes them available again.')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const { t } = useTranslation()\n  const { nftsInWallet } = useGetCollectibles()\n\n  return (\n    <>\n      <Heading as=\"h4\" scale=\"md\" mb=\"8px\">\n        {t('EVERTELL FLIX Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {t('EVERTELL FLIX Collectibles are special ERC-721 NFTs that can be used on the EVERTELL FLIX platform.')}\n      </Text>\n      <Text as=\"p\">\n        {t('NFTs in this user’s wallet that aren’t approved EVERTELL FLIX Collectibles won’t be shown here.')}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.identifier} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {t('No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{t('See all approved EVERTELL FLIX Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@pancakeswap/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n  VisibilityOn,\n  VisibilityOff,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useProfile } from 'state/profile/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { getBscScanLink } from 'utils'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  \n  const [usernameVisibilityToggled, setUsernameVisibility] = usePersistState(false, {\n    localStorageKey: 'username_visibility_toggled',\n  })\n  \n  const { t } = useTranslation()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  const toggleUsernameVisibility = () => {\n    setUsernameVisibility(!usernameVisibilityToggled)\n  }\n\n  const { username, team, isActive, points } = profile\n\n  const Icon = usernameVisibilityToggled ? VisibilityOff : VisibilityOn\n  \n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Flex alignItems=\"center\">\n                  <Username>@{usernameVisibilityToggled ? username : username.replace(/./g, '*')}</Username>\n                  <Icon ml=\"4px\" onClick={toggleUsernameVisibility} cursor=\"pointer\" />\n                </Flex>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={getBscScanLink(account, 'address')} color=\"text\" external>\n                    {account}\n                    <OpenNewIcon ml=\"4px\" />\n                  </AddressLink>\n                </Flex>\n                <ResponsiveText bold>{team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {t('Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {t('Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={points} subtitle={t('Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" scale=\"md\" mb=\"16px\">\n                {t('Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/Layout/Page'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { useProfile } from 'state/profile/hooks'\nimport { useFetchAchievements } from 'state/achievements/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  useFetchAchievements()\n  \n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => ethers.providers.TransactionResponse\n  onConfirm: () => ethers.providers.TransactionResponse\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n  onApproveSuccess?: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess(state)\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async () => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess(state)\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport Nfts from 'config/constants/nfts'\nimport { State } from '../types'\nimport { fetchWalletNfts } from './index'\n\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => {\n      \n      return identifiers.includes(nft.identifier)}),\n  }\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { State, TeamsState } from '../types'\nimport { fetchTeam, fetchTeams } from '.'\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n"],"sourceRoot":""}